# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:

	def __init__(self, list_1, list_2):
		self.list_1 = list_1
		self.list_2 = list_2

	def __add__(self):
		matrix = [
			[0, 0, 0],
			[0, 0, 0],
			[0, 0, 0],
		]

		for i in range(len(self.list_1)):
			for k in range (len(self.list_2)):
				matrix[i][k] = self.list_1[i][k] + self.list_2[i][k]

		return str('\n'.join(['\t'.join([str(k) for k in i]) for i in matrix]))

	def __str__(self):
		return str('\n'.join(['\t'.join([str(k) for k in i]) for i in matrix]))


test_matrix1 = [
			[3, 1, 1],
			[0, 2, 1],
			[4, 5, 4],
		]
test_matrix2 = [
			[2, 2, 2],
			[1, 2, 3],
			[3, 2, 1],
		]

calc_matrix = Matrix(test_matrix1, test_matrix2)

print(calc_matrix.__add__())